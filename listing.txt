; begin function f
00000000 | 0e 00 000000e4                                         | jmp f_end
f:
; arg n
00000006 | 0b 07          0000000000000000 07                     | pop [0+rbp]
; new block
; if
; fun eq call
; var n
00000011 | 0a 07          0000000000000000 07                     | push [0+rbp]
0000001c | 0a 01          0000000000000000                        | push 0
00000026 | 0a 02                           07                     | push rbp
00000029 | 0a 01          0000000000000002                        | push 2
00000033 | 00 00                                                  | add
00000035 | 0b 02                           07                     | pop rbp
00000038 | 0c 00 00000814                                         | call eq
0000003e | 0a 02                           07                     | push rbp
00000041 | 0a 01          0000000000000002                        | push 2
0000004b | 01 00                                                  | sub
0000004d | 0b 02                           07                     | pop rbp
00000050 | 0b 02                           00                     | pop rax
00000053 | 09 0a                           00 0000000000000000    | cmp rax 0
0000005e | 14 00 0000006a                                         | jne if0
00000064 | 0e 00 0000007c                                         | jmp else0
if0:
0000006a | 0a 01          00000000000003e8                        | push 1000
00000074 | 0d 00                                                  | ret
00000076 | 0e 00 000000d8                                         | jmp end_if0
else0:
; else
; fun f call
; var n
0000007c | 0a 07          0000000000000000 07                     | push [0+rbp]
00000087 | 0a 01          00000000000003e8                        | push 1000
; evaluation of SUB
00000091 | 01 00                                                  | sub
00000093 | 0a 02                           07                     | push rbp
00000096 | 0a 01          0000000000000002                        | push 2
000000a0 | 00 00                                                  | add
000000a2 | 0b 02                           07                     | pop rbp
000000a5 | 0c 00 00000006                                         | call f
000000ab | 0a 02                           07                     | push rbp
000000ae | 0a 01          0000000000000002                        | push 2
000000b8 | 01 00                                                  | sub
000000ba | 0b 02                           07                     | pop rbp
; var n
000000bd | 0a 07          0000000000000000 07                     | push [0+rbp]
; evaluation of MUL
000000c8 | 0a 01          00000000000003e8                        | push 1000
000000d2 | 03 00                                                  | div
000000d4 | 02 00                                                  | mul
000000d6 | 0d 00                                                  | ret
end_if0:
; end if
; end of block
000000d8 | 0a 01          0000000000000000                        | push 0
000000e2 | 0d 00                                                  | ret
f_end:
; end function f
; begin function main
000000e4 | 0e 00 00000194                                         | jmp main_end
main:
; new block
; new var n
; fun read call
000000ea | 0a 02                           07                     | push rbp
000000ed | 0a 01          0000000000000001                        | push 1
000000f7 | 00 00                                                  | add
000000f9 | 0b 02                           07                     | pop rbp
000000fc | 0c 00 000008e2                                         | call read
00000102 | 0a 02                           07                     | push rbp
00000105 | 0a 01          0000000000000001                        | push 1
0000010f | 01 00                                                  | sub
00000111 | 0b 02                           07                     | pop rbp
00000114 | 0b 07          0000000000000000 07                     | pop [0+rbp]
; fun print call
; fun f call
; var n
0000011f | 0a 07          0000000000000000 07                     | push [0+rbp]
0000012a | 0a 02                           07                     | push rbp
0000012d | 0a 01          0000000000000002                        | push 2
00000137 | 00 00                                                  | add
00000139 | 0b 02                           07                     | pop rbp
0000013c | 0c 00 00000006                                         | call f
00000142 | 0a 02                           07                     | push rbp
00000145 | 0a 01          0000000000000002                        | push 2
0000014f | 01 00                                                  | sub
00000151 | 0b 02                           07                     | pop rbp
00000154 | 0a 02                           07                     | push rbp
00000157 | 0a 01          0000000000000002                        | push 2
00000161 | 00 00                                                  | add
00000163 | 0b 02                           07                     | pop rbp
00000166 | 0c 00 000008c2                                         | call print
0000016c | 0a 02                           07                     | push rbp
0000016f | 0a 01          0000000000000002                        | push 2
00000179 | 01 00                                                  | sub
0000017b | 0b 02                           07                     | pop rbp
0000017e | 0b 01          0000000000000000                        | pop
; end of block
00000188 | 0a 01          0000000000000000                        | push 0
00000192 | 0d 00                                                  | ret
main_end:
; end function main
00000194 | 0e 00 0000037a                                         | jmp sqrt_end
sqrt:
0000019a | 0b 07          0000000000000000 07                     | pop [0+rbp]
000001a5 | 0a 01          0000000000000000                        | push 0
000001af | 0b 07          0000000000000001 07                     | pop [1+rbp]
000001ba | 0a 07          0000000000000000 07                     | push [0+rbp]
000001c5 | 0a 01          00000000000003e8                        | push 1000
000001cf | 00 00                                                  | add
000001d1 | 0b 07          0000000000000002 07                     | pop [2+rbp]
000001dc | 0a 01          0000000000000000                        | push 0
000001e6 | 0b 07          0000000000000003 07                     | pop [3+rbp]
000001f1 | 0a 01          0000000000000000                        | push 0
000001fb | 0b 07          0000000000000004 07                     | pop [4+rbp]
sqrt_loop0:
00000206 | 0a 07          0000000000000003 07                     | push [3+rbp]
00000211 | 0a 01          000000000000c350                        | push 50000
0000021b | 0a 02                           07                     | push rbp
0000021e | 0a 01          0000000000000006                        | push 6
00000228 | 00 00                                                  | add
0000022a | 0b 02                           07                     | pop rbp
0000022d | 0c 00 000007ba                                         | call lt
00000233 | 0a 02                           07                     | push rbp
00000236 | 0a 01          0000000000000006                        | push 6
00000240 | 01 00                                                  | sub
00000242 | 0b 02                           07                     | pop rbp
00000245 | 0b 02                           00                     | pop rax
00000248 | 09 0a                           00 0000000000000000    | cmp rax 0
00000253 | 13 00 00000361                                         | je sqrt_end_loop0
00000259 | 0a 07          0000000000000001 07                     | push [1+rbp]
00000264 | 0a 07          0000000000000002 07                     | push [2+rbp]
0000026f | 00 00                                                  | add
00000271 | 0a 01          00000000000007d0                        | push 2000
0000027b | 0a 01          00000000000003e8                        | push 1000
00000285 | 03 00                                                  | div
00000287 | 03 00                                                  | div
00000289 | 0b 07          0000000000000005 07                     | pop [5+rbp]
00000294 | 0a 07          0000000000000005 07                     | push [5+rbp]
0000029f | 0a 07          0000000000000005 07                     | push [5+rbp]
000002aa | 0a 01          00000000000003e8                        | push 1000
000002b4 | 03 00                                                  | div
000002b6 | 02 00                                                  | mul
000002b8 | 0a 07          0000000000000000 07                     | push [0+rbp]
000002c3 | 0a 02                           07                     | push rbp
000002c6 | 0a 01          0000000000000007                        | push 7
000002d0 | 00 00                                                  | add
000002d2 | 0b 02                           07                     | pop rbp
000002d5 | 0c 00 00000692                                         | call leq
000002db | 0a 02                           07                     | push rbp
000002de | 0a 01          0000000000000007                        | push 7
000002e8 | 01 00                                                  | sub
000002ea | 0b 02                           07                     | pop rbp
000002ed | 0b 02                           00                     | pop rax
000002f0 | 09 0a                           00 0000000000000000    | cmp rax 0
000002fb | 14 00 00000307                                         | jne sqrt_if0
00000301 | 0e 00 00000323                                         | jmp sqrt_else0
sqrt_if0:
00000307 | 0a 07          0000000000000005 07                     | push [5+rbp]
00000312 | 0b 07          0000000000000001 07                     | pop [1+rbp]
0000031d | 0e 00 00000339                                         | jmp sqrt_end_if0
sqrt_else0:
00000323 | 0a 07          0000000000000005 07                     | push [5+rbp]
0000032e | 0b 07          0000000000000002 07                     | pop [2+rbp]
sqrt_end_if0:
00000339 | 0a 07          0000000000000003 07                     | push [3+rbp]
00000344 | 0a 01          00000000000003e8                        | push 1000
0000034e | 00 00                                                  | add
00000350 | 0b 07          0000000000000003 07                     | pop [3+rbp]
0000035b | 0e 00 00000206                                         | jmp sqrt_loop0
sqrt_end_loop0:
00000361 | 0a 07          0000000000000001 07                     | push [1+rbp]
0000036c | 0d 00                                                  | ret
0000036e | 0a 01          0000000000000000                        | push 0
00000378 | 0d 00                                                  | ret
sqrt_end:
0000037a | 0e 00 00000484                                         | jmp and_end
and:
00000380 | 0b 07          0000000000000001 07                     | pop [1+rbp]
0000038b | 0b 07          0000000000000000 07                     | pop [0+rbp]
00000396 | 0a 07          0000000000000000 07                     | push [0+rbp]
000003a1 | 0a 01          0000000000000000                        | push 0
000003ab | 0a 02                           07                     | push rbp
000003ae | 0a 01          0000000000000003                        | push 3
000003b8 | 00 00                                                  | add
000003ba | 0b 02                           07                     | pop rbp
000003bd | 0c 00 00000814                                         | call eq
000003c3 | 0a 02                           07                     | push rbp
000003c6 | 0a 01          0000000000000003                        | push 3
000003d0 | 01 00                                                  | sub
000003d2 | 0b 02                           07                     | pop rbp
000003d5 | 0b 02                           00                     | pop rax
000003d8 | 09 0a                           00 0000000000000000    | cmp rax 0
000003e3 | 14 00 000003ef                                         | jne and_if1
000003e9 | 0e 00 00000401                                         | jmp and_else1
and_if1:
000003ef | 0a 01          0000000000000000                        | push 0
000003f9 | 0d 00                                                  | ret
000003fb | 0e 00 00000478                                         | jmp and_end_if1
and_else1:
00000401 | 0a 07          0000000000000001 07                     | push [1+rbp]
0000040c | 0a 01          0000000000000000                        | push 0
00000416 | 0a 02                           07                     | push rbp
00000419 | 0a 01          0000000000000003                        | push 3
00000423 | 00 00                                                  | add
00000425 | 0b 02                           07                     | pop rbp
00000428 | 0c 00 00000814                                         | call eq
0000042e | 0a 02                           07                     | push rbp
00000431 | 0a 01          0000000000000003                        | push 3
0000043b | 01 00                                                  | sub
0000043d | 0b 02                           07                     | pop rbp
00000440 | 0b 02                           00                     | pop rax
00000443 | 09 0a                           00 0000000000000000    | cmp rax 0
0000044e | 14 00 0000045a                                         | jne and_if2
00000454 | 0e 00 0000046c                                         | jmp and_else2
and_if2:
0000045a | 0a 01          0000000000000000                        | push 0
00000464 | 0d 00                                                  | ret
00000466 | 0e 00 0000046c                                         | jmp and_end_if2
and_else2:
and_end_if2:
0000046c | 0a 01          00000000000003e8                        | push 1000
00000476 | 0d 00                                                  | ret
and_end_if1:
00000478 | 0a 01          0000000000000000                        | push 0
00000482 | 0d 00                                                  | ret
and_end:
00000484 | 0e 00 0000058e                                         | jmp or_end
or:
0000048a | 0b 07          0000000000000001 07                     | pop [1+rbp]
00000495 | 0b 07          0000000000000000 07                     | pop [0+rbp]
000004a0 | 0a 07          0000000000000000 07                     | push [0+rbp]
000004ab | 0a 01          0000000000000000                        | push 0
000004b5 | 0a 02                           07                     | push rbp
000004b8 | 0a 01          0000000000000003                        | push 3
000004c2 | 00 00                                                  | add
000004c4 | 0b 02                           07                     | pop rbp
000004c7 | 0c 00 00000594                                         | call gt
000004cd | 0a 02                           07                     | push rbp
000004d0 | 0a 01          0000000000000003                        | push 3
000004da | 01 00                                                  | sub
000004dc | 0b 02                           07                     | pop rbp
000004df | 0b 02                           00                     | pop rax
000004e2 | 09 0a                           00 0000000000000000    | cmp rax 0
000004ed | 14 00 000004f9                                         | jne or_if3
000004f3 | 0e 00 0000050b                                         | jmp or_else3
or_if3:
000004f9 | 0a 01          00000000000003e8                        | push 1000
00000503 | 0d 00                                                  | ret
00000505 | 0e 00 00000582                                         | jmp or_end_if3
or_else3:
0000050b | 0a 07          0000000000000001 07                     | push [1+rbp]
00000516 | 0a 01          0000000000000000                        | push 0
00000520 | 0a 02                           07                     | push rbp
00000523 | 0a 01          0000000000000003                        | push 3
0000052d | 00 00                                                  | add
0000052f | 0b 02                           07                     | pop rbp
00000532 | 0c 00 00000594                                         | call gt
00000538 | 0a 02                           07                     | push rbp
0000053b | 0a 01          0000000000000003                        | push 3
00000545 | 01 00                                                  | sub
00000547 | 0b 02                           07                     | pop rbp
0000054a | 0b 02                           00                     | pop rax
0000054d | 09 0a                           00 0000000000000000    | cmp rax 0
00000558 | 14 00 00000564                                         | jne or_if4
0000055e | 0e 00 00000576                                         | jmp or_else4
or_if4:
00000564 | 0a 01          00000000000003e8                        | push 1000
0000056e | 0d 00                                                  | ret
00000570 | 0e 00 00000576                                         | jmp or_end_if4
or_else4:
or_end_if4:
00000576 | 0a 01          0000000000000000                        | push 0
00000580 | 0d 00                                                  | ret
or_end_if3:
00000582 | 0a 01          0000000000000000                        | push 0
0000058c | 0d 00                                                  | ret
or_end:
0000058e | 0e 00 000005f8                                         | jmp gt_end
gt:
00000594 | 0b 07          0000000000000001 07                     | pop [1+rbp]
0000059f | 0b 07          0000000000000000 07                     | pop [0+rbp]
000005aa | 0a 07          0000000000000001 07                     | push [1+rbp]
000005b5 | 0a 07          0000000000000000 07                     | push [0+rbp]
000005c0 | 0a 02                           07                     | push rbp
000005c3 | 0a 01          0000000000000003                        | push 3
000005cd | 00 00                                                  | add
000005cf | 0b 02                           07                     | pop rbp
000005d2 | 0c 00 000007ba                                         | call lt
000005d8 | 0a 02                           07                     | push rbp
000005db | 0a 01          0000000000000003                        | push 3
000005e5 | 01 00                                                  | sub
000005e7 | 0b 02                           07                     | pop rbp
000005ea | 0d 00                                                  | ret
000005ec | 0a 01          0000000000000000                        | push 0
000005f6 | 0d 00                                                  | ret
gt_end:
000005f8 | 0e 00 0000068c                                         | jmp geq_end
geq:
000005fe | 0b 07          0000000000000001 07                     | pop [1+rbp]
00000609 | 0b 07          0000000000000000 07                     | pop [0+rbp]
00000614 | 0a 07          0000000000000000 07                     | push [0+rbp]
0000061f | 0a 07          0000000000000001 07                     | push [1+rbp]
0000062a | 0a 02                           07                     | push rbp
0000062d | 0a 01          0000000000000003                        | push 3
00000637 | 00 00                                                  | add
00000639 | 0b 02                           07                     | pop rbp
0000063c | 0c 00 000007ba                                         | call lt
00000642 | 0a 02                           07                     | push rbp
00000645 | 0a 01          0000000000000003                        | push 3
0000064f | 01 00                                                  | sub
00000651 | 0b 02                           07                     | pop rbp
00000654 | 0a 02                           07                     | push rbp
00000657 | 0a 01          0000000000000003                        | push 3
00000661 | 00 00                                                  | add
00000663 | 0b 02                           07                     | pop rbp
00000666 | 0c 00 0000086e                                         | call not
0000066c | 0a 02                           07                     | push rbp
0000066f | 0a 01          0000000000000003                        | push 3
00000679 | 01 00                                                  | sub
0000067b | 0b 02                           07                     | pop rbp
0000067e | 0d 00                                                  | ret
00000680 | 0a 01          0000000000000000                        | push 0
0000068a | 0d 00                                                  | ret
geq_end:
0000068c | 0e 00 00000720                                         | jmp leq_end
leq:
00000692 | 0b 07          0000000000000001 07                     | pop [1+rbp]
0000069d | 0b 07          0000000000000000 07                     | pop [0+rbp]
000006a8 | 0a 07          0000000000000000 07                     | push [0+rbp]
000006b3 | 0a 07          0000000000000001 07                     | push [1+rbp]
000006be | 0a 02                           07                     | push rbp
000006c1 | 0a 01          0000000000000003                        | push 3
000006cb | 00 00                                                  | add
000006cd | 0b 02                           07                     | pop rbp
000006d0 | 0c 00 00000594                                         | call gt
000006d6 | 0a 02                           07                     | push rbp
000006d9 | 0a 01          0000000000000003                        | push 3
000006e3 | 01 00                                                  | sub
000006e5 | 0b 02                           07                     | pop rbp
000006e8 | 0a 02                           07                     | push rbp
000006eb | 0a 01          0000000000000003                        | push 3
000006f5 | 00 00                                                  | add
000006f7 | 0b 02                           07                     | pop rbp
000006fa | 0c 00 0000086e                                         | call not
00000700 | 0a 02                           07                     | push rbp
00000703 | 0a 01          0000000000000003                        | push 3
0000070d | 01 00                                                  | sub
0000070f | 0b 02                           07                     | pop rbp
00000712 | 0d 00                                                  | ret
00000714 | 0a 01          0000000000000000                        | push 0
0000071e | 0d 00                                                  | ret
leq_end:
00000720 | 0e 00 000007b4                                         | jmp neq_end
neq:
00000726 | 0b 07          0000000000000001 07                     | pop [1+rbp]
00000731 | 0b 07          0000000000000000 07                     | pop [0+rbp]
0000073c | 0a 07          0000000000000000 07                     | push [0+rbp]
00000747 | 0a 07          0000000000000001 07                     | push [1+rbp]
00000752 | 0a 02                           07                     | push rbp
00000755 | 0a 01          0000000000000003                        | push 3
0000075f | 00 00                                                  | add
00000761 | 0b 02                           07                     | pop rbp
00000764 | 0c 00 00000814                                         | call eq
0000076a | 0a 02                           07                     | push rbp
0000076d | 0a 01          0000000000000003                        | push 3
00000777 | 01 00                                                  | sub
00000779 | 0b 02                           07                     | pop rbp
0000077c | 0a 02                           07                     | push rbp
0000077f | 0a 01          0000000000000003                        | push 3
00000789 | 00 00                                                  | add
0000078b | 0b 02                           07                     | pop rbp
0000078e | 0c 00 0000086e                                         | call not
00000794 | 0a 02                           07                     | push rbp
00000797 | 0a 01          0000000000000003                        | push 3
000007a1 | 01 00                                                  | sub
000007a3 | 0b 02                           07                     | pop rbp
000007a6 | 0d 00                                                  | ret
000007a8 | 0a 01          0000000000000000                        | push 0
000007b2 | 0d 00                                                  | ret
neq_end:
000007b4 | 0e 00 0000080e                                         | jmp lt_end
lt:
000007ba | 0b 07          0000000000000001 07                     | pop [1+rbp]
000007c5 | 0b 07          0000000000000000 07                     | pop [0+rbp]
000007d0 | 09 3f          0000000000000000 07 0000000000000001 07 | cmp [0+rbp] [1+rbp]
000007e4 | 11 00 000007f0                                         | jb  lt_if0
000007ea | 0e 00 00000802                                         | jmp lt_else0
lt_if0:
000007f0 | 0a 01          0000000000000001                        | push 1
000007fa | 0d 00                                                  | ret
000007fc | 0e 00 0000080e                                         | jmp lt_end_if0
lt_else0:
00000802 | 0a 01          0000000000000000                        | push 0
0000080c | 0d 00                                                  | ret
lt_end_if0:
lt_end:
0000080e | 0e 00 00000868                                         | jmp eq_end
eq:
00000814 | 0b 07          0000000000000000 07                     | pop [0+rbp]
0000081f | 0b 07          0000000000000001 07                     | pop [1+rbp]
0000082a | 09 3f          0000000000000000 07 0000000000000001 07 | cmp [0+rbp] [1+rbp]
0000083e | 13 00 0000084a                                         | je  eq_if0
00000844 | 0e 00 0000085c                                         | jmp eq_else0
eq_if0:
0000084a | 0a 01          0000000000000001                        | push 1
00000854 | 0d 00                                                  | ret
00000856 | 0e 00 00000868                                         | jmp eq_end_if0
eq_else0:
0000085c | 0a 01          0000000000000000                        | push 0
00000866 | 0d 00                                                  | ret
eq_end_if0:
eq_end:
00000868 | 0e 00 000008bc                                         | jmp not_end
not:
0000086e | 0b 07          0000000000000000 07                     | pop [0+rbp]
00000879 | 0a 07          0000000000000000 07                     | push [0+rbp]
00000884 | 0b 02                           00                     | pop rax
00000887 | 09 0a                           00 0000000000000000    | cmp rax 0
00000892 | 13 00 0000089e                                         | je  not_if0
00000898 | 0e 00 000008b0                                         | jmp not_else0
not_if0:
0000089e | 0a 01          0000000000000001                        | push 1
000008a8 | 0d 00                                                  | ret
000008aa | 0e 00 000008bc                                         | jmp not_end_if0
not_else0:
000008b0 | 0a 01          0000000000000000                        | push 0
000008ba | 0d 00                                                  | ret
not_end_if0:
not_end:
000008bc | 0e 00 000008dc                                         | jmp print_end
print:
000008c2 | 06 00                                                  | out
000008c4 | 0b 07          0000000000000000 07                     | pop [0+rbp]
000008cf | 0a 07          0000000000000000 07                     | push [0+rbp]
000008da | 0d 00                                                  | ret
print_end:
000008dc | 0e 00 000008e6                                         | jmp read_end
read:
000008e2 | 05 00                                                  | inp
000008e4 | 0d 00                                                  | ret
read_end:
000008e6 | 0e 00 000009ea                                         | jmp set_pixel_end
set_pixel:
000008ec | 0b 07          0000000000000002 07                     | pop [2+rbp]
000008f7 | 0b 07          0000000000000001 07                     | pop [1+rbp]
00000902 | 0b 07          0000000000000000 07                     | pop [0+rbp]
0000090d | 0a 01          0000000000009c40                        | push 40000
00000917 | 0a 07          0000000000000000 07                     | push [0+rbp]
00000922 | 0a 01          0000000000000028                        | push 40
0000092c | 02 00                                                  | mul
0000092e | 00 00                                                  | add
00000930 | 0a 01          00000000000003e8                        | push 1000
0000093a | 03 00                                                  | div
0000093c | 0b 07          0000000000000003 07                     | pop [3+rbp]
00000947 | 0a 01          0000000000002ee0                        | push 12000
00000951 | 0a 07          0000000000000001 07                     | push [1+rbp]
0000095c | 0a 01          00000000fffffff4                        | push -12
00000966 | 02 00                                                  | mul
00000968 | 00 00                                                  | add
0000096a | 0a 01          00000000000003e8                        | push 1000
00000974 | 03 00                                                  | div
00000976 | 0b 07          0000000000000004 07                     | pop [4+rbp]
00000981 | 0a 07          0000000000000004 07                     | push [4+rbp]
0000098c | 0a 01          0000000000000050                        | push 80
00000996 | 02 00                                                  | mul
00000998 | 0a 07          0000000000000003 07                     | push [3+rbp]
000009a3 | 00 00                                                  | add
000009a5 | 0b 07          0000000000000005 07                     | pop [5+rbp]
000009b0 | 0a 07          0000000000000005 07                     | push [5+rbp]
000009bb | 0a 02                           09                     | push rvb
000009be | 00 00                                                  | add
000009c0 | 0b 02                           00                     | pop rax
000009c3 | 0a 07          0000000000000002 07                     | push [2+rbp]
000009ce | 0a 01          00000000000003e8                        | push 1000
000009d8 | 03 00                                                  | div
000009da | 0b 06                           00                     | pop [rax]
000009dd | 0a 07          0000000000000002 07                     | push [2+rbp]
000009e8 | 0d 00                                                  | ret
set_pixel_end:
000009ea | 0e 00 000009fe                                         | jmp flush_end
flush:
000009f0 | 07 00                                                  | vmout
000009f2 | 0a 01          0000000000000001                        | push 1
000009fc | 0d 00                                                  | ret
flush_end:
000009fe | 0e 00 00000a12                                         | jmp neg_end
neg:
00000a04 | 0a 01          00000000ffffffff                        | push -1
00000a0e | 02 00                                                  | mul
00000a10 | 0d 00                                                  | ret
neg_end:
00000a12 | 0a 01          0000000000000384                        | push 900
00000a1c | 0b 02                           08                     | pop rgm
00000a1f | 0a 01          0000000000000708                        | push 1800
00000a29 | 0b 02                           09                     | pop rvb
00000a2c | 0c 00 000000ea                                         | call main
00000a32 | 08 00                                                  | hlt
